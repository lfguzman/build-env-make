# Makefile.common


#####################################################################
# BEGIN - THIS VARIABLES MUST BE UPDATED IN ORDER TO REUSE MAKEFILES

# replace with the name of the library that this build environment belongs to
library = synch

# Replace this with the name of your root directory, not the path
# just the directory name
ROOT_DIR_NAME = build-env-make

# END - THIS VARIABLES MUST BE UPDATED IN ORDER TO REUSE MAKEFILES
#####################################################################


# root directory path
ROOT_DIR = $(shell pwd | sed 's/\(^.*'$(ROOT_DIR_NAME)'\).*$$/\1/')
INCLUDE_DIR = $(ROOT_DIR)/include
LIB_DIR = $(ROOT_DIR)/lib
LIB_STATIC_DIR = $(LIB_DIR)/static

# Google Test and Google Mock directories (now both part of googletest)
GTEST_DIR = /usr/local
# for g++-8.2 -std=c++17
GTEST_LIB_DIR = $(GTEST_DIR)/lib/gccgtest
# for clang++
#GTEST_LIB_DIR = $(GTEST_DIR)/lib/gccgtest

# C++ compiler and std version
CXX = g++-8.2
CPPSTD = -std=c++17

# Flags passed to the C++ compiler
CXXOPT := -O2

CXXWARNFLAGS := \
    -Wall \
    -Wextra \

CXXFLAGS := $(CPPSTD) $(CXXWARNFLAGS) $(CXXOPT)

CPPFLAGS = \
    -I$(INCLUDE_DIR) \

LD_FLAGS = \
    -L$(LIB_DIR) \

LD_STATIC_FLAGS = \

LINKSTATIC = $(AR) -rcs
LINKDYNAMIC = $(CXX) -shared
DYNAMIC_EXT = so

# Build a dynamic library
%.$(DYNAMIC_EXT):
	@if [ ! -d $(LIB_DIR) ] ; then mkdir -p $(LIB_DIR) ; fi
	$(LINKDYNAMIC) $(LD_FLAGS) -o $@ $(objects)
	@-cp $@ $(LIB_DIR)/

# Build a static library
%.a:
	@if [ ! -d $(LIB_STATIC_DIR) ] ; then mkdir -p $(LIB_STATIC_DIR) ; fi
	$(LINKSTATIC) $(LD_STATIC_FLAGS) $@ $(objects)
	@-cp $@ $(LIB_STATIC_DIR)

# Flag for generating include dependencies
df = -MM

# Generate dependencies for .C files
%.d: %.C
	@set -e; $(CXX) $(df) $(CPPFLAGS) $< \
             | sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
             [ -s $@ ] || rm -f $@


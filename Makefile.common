# Makefile.common


#####################################################################
# BEGIN - THIS VARIABLES MUST BE UPDATED IN ORDER TO REUSE MAKEFILES

# replace with the name of the library that this build environment belongs to
library = synch

# Replace this with the name of your root directory, not the path
# just the directory name
ROOT_DIR_NAME = build-env-make

# END - THIS VARIABLES MUST BE UPDATED IN ORDER TO REUSE MAKEFILES
#####################################################################


#####################################################################
# BEGIN - THIS VARIABLES MAY NEED TO BE UPDATED IN ORDER TO REUSE MAKEFILES

# Google Test and Google Mock directories (now both part of googletest)
GTEST_DIR = /Users/luis/expect/googletest-release-1.10.0
GTEST_LIB_DIR = $(GTEST_DIR)/mybuild/lib
GTEST_INCLUDE_DIR = $(GTEST_DIR)/googletest/include
GMOCK_INCLUDE_DIR = $(GTEST_DIR)/googlemock/include

# C++ compiler and std version
LLVM_DIR = /usr/local/opt/llvm
CXX = $(LLVM_DIR)/bin/clang++

# These group of variables are needed only if your compiler is not the
# default compiler in our computer (OS). In other words, these are only
# needed if you install an additional compiler in a location separate
# from your system's.
LLVM_INCLUDE_DIR = /usr/local/opt/llvm/include
LLVM_LIB_DIR = $(LLVM_DIR)/lib
LD_LLVMFLAGS = -L$(LLVM_LIB_DIR) -Wl,-rpath,$(LLVM_LIB_DIR)

CPPSTD = -std=c++2a

# END - THIS VARIABLES MAY NEED TO BE UPDATED IN ORDER TO REUSE MAKEFILES
#####################################################################

# root directory path
ROOT_DIR = $(shell pwd | sed 's/\(^.*'$(ROOT_DIR_NAME)'\).*$$/\1/')
INCLUDE_DIR = $(ROOT_DIR)/include
LIB_DIR = $(ROOT_DIR)/lib
LIB_STATIC_DIR = $(LIB_DIR)/static

# Flags passed to the C++ compiler
CXXOPT := -O2

CXXWARNFLAGS := \
    -Wall \
    -Wextra \

CXXFLAGS := $(CPPSTD) $(CXXWARNFLAGS) $(CXXOPT) $(CDEBUG)

CPPFLAGS = \
    -I$(LLVM_INCLUDE_DIR) \
    -I$(INCLUDE_DIR) \

LD_FLAGS = \
    $(LD_LLVMFLAGS) \
    -L$(LIB_DIR) \

LD_STATIC_FLAGS = \

LINKSTATIC = $(AR) -rcs
LINKDYNAMIC = $(CXX) -shared
DYNAMIC_EXT = so

# Build a dynamic library
%.$(DYNAMIC_EXT):
	@if [ ! -d $(LIB_DIR) ] ; then mkdir -p $(LIB_DIR) ; fi
	$(LINKDYNAMIC) $(LD_FLAGS) -o $@ $(objects)
	@-cp $@ $(LIB_DIR)/

# Build a static library
%.a:
	@if [ ! -d $(LIB_STATIC_DIR) ] ; then mkdir -p $(LIB_STATIC_DIR) ; fi
	$(LINKSTATIC) $(LD_STATIC_FLAGS) $@ $(objects)
	@-cp $@ $(LIB_STATIC_DIR)

# Flag for generating include dependencies
df = -MM

# Generate dependencies for .C files
%.d: %.C
	@set -e; $(CXX) $(df) $(CPPFLAGS) $< \
             | sed 's/\($*\)\.o[ :]*/\1.o $@ : /g' > $@; \
             [ -s $@ ] || rm -f $@

